/**
*
*Copyright 2010 OuterCurve Foundation
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/
/**
* This code was generated by the tool 'odatagen'.
* Runtime Version:1.0
*
* Changes to this file may cause incorrect behavior and will be lost if
* the code is regenerated.
*/
/**
* Defines default Data Service URL for this proxy class
*/
#define DEFAULT_SERVICE_URL @""


#define DataServiceVersion @"2.0"

#import "ODataObject.h"
#import "ObjectContext.h"
#import "DataServiceQuery.h"
#import "ODataGUID.h"
#import "ODataBool.h"
#import  "mProperties.h"


/**
 * @interface:Session
 * @Type:EntityType
 
 * @key:SessionID* 
 */
@interface eventsModel_Session : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_SessionID;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:50
	* @FixedLength:false
	*/
	NSString *m_EventCode;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:50
	* @FixedLength:false
	*/
	NSString *m_SessionCode;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:50
	* @FixedLength:false
	*/
	NSString *m_SessionTypeCode;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int16
	*/
	NSNumber *m_Level;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	* @FC_TargetPath:SyndicationSummary
	* @FC_ContentKind:
	* @FC_NsPrefix:
	* @FC_NsUri:
	* @FC_KeepInContent:false
   * @FC_Criteria:NIL
	
	*/
	NSString *m_Abstract;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Boolean
	*/
	ODataBool *m_PublishFlag;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:375
	* @FixedLength:false
	* @FC_TargetPath:SyndicationTitle
	* @FC_ContentKind:
	* @FC_NsPrefix:
	* @FC_NsUri:
	* @FC_KeepInContent:false
   * @FC_Criteria:NIL
	
	*/
	NSString *m_Title;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	*/
	NSString *m_Notes;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:75
	* @FixedLength:false
	*/
	NSString *m_Room;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_StartTime;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Duration;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:SessionSpeaker
	* @FromRole:Session
	* @ToRole:Speaker
	*/
	NSMutableArray *m_Speakers;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:SessionTag
	* @FromRole:Session
	* @ToRole:Tag
	*/
	NSMutableArray *m_Tags;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:FK_File_Session
	* @FromRole:Session
	* @ToRole:File
	*/
	NSMutableArray *m_Files;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:FK_Tweet_Session
	* @FromRole:Session
	* @ToRole:Tweet
	*/
	NSMutableArray *m_Tweets;
	
}

@property ( nonatomic , retain , getter=getSessionID , setter=setSessionID: )NSNumber *m_SessionID;
@property ( nonatomic , retain , getter=getEventCode , setter=setEventCode: ) NSString *m_EventCode;
@property ( nonatomic , retain , getter=getSessionCode , setter=setSessionCode: ) NSString *m_SessionCode;
@property ( nonatomic , retain , getter=getSessionTypeCode , setter=setSessionTypeCode: ) NSString *m_SessionTypeCode;
@property ( nonatomic , retain , getter=getLevel , setter=seLevel: )NSNumber *m_Level;
@property ( nonatomic , retain , getter=getAbstract , setter=setAbstract: ) NSString *m_Abstract;
@property ( nonatomic , retain , getter=getPublishFlag , setter=setPublishFlag: )ODataBool *m_PublishFlag;
@property ( nonatomic , retain , getter=getTitle , setter=setTitle: ) NSString *m_Title;
@property ( nonatomic , retain , getter=getNotes , setter=setNotes: ) NSString *m_Notes;
@property ( nonatomic , retain , getter=getRoom , setter=setRoom: ) NSString *m_Room;
@property ( nonatomic , retain , getter=getStartTime , setter=setStartTime: )NSDate *m_StartTime;
@property ( nonatomic , retain , getter=getDuration , setter=setDuation: )NSNumber *m_Duration;
@property ( nonatomic , retain , getter=getSpeakers , setter=setSpeakers: )NSMutableArray *m_Speakers;
@property ( nonatomic , retain , getter=getTags , setter=setTags: )NSMutableArray *m_Tags;
@property ( nonatomic , retain , getter=getFiles , setter=setFiles: )NSMutableArray *m_Files;
@property ( nonatomic , retain , getter=getTweets , setter=setTweets: )NSMutableArray *m_Tweets;

+ (id) CreateSessionWithsessionid:(NSNumber *)aSessionID eventcode:(NSString *)aEventCode sessioncode:(NSString *)aSessionCode sessiontypecode:(NSString *)aSessionTypeCode publishflag:(ODataBool *)aPublishFlag title:(NSString *)aTitle;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Speaker
 * @Type:EntityType
 
 * @key:SpeakerID* 
 */
@interface eventsModel_Speaker : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_SpeakerID;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:255
	* @FixedLength:false
	*/
	NSString *m_Email;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:50
	* @FixedLength:false
	* @FC_TargetPath:SyndicationTitle
	* @FC_ContentKind:
	* @FC_NsPrefix:
	* @FC_NsUri:
	* @FC_KeepInContent:false
   * @FC_Criteria:NIL
	
	*/
	NSString *m_FirstName;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:50
	* @FixedLength:false
	*/
	NSString *m_LastName;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	* @FC_TargetPath:SyndicationSummary
	* @FC_ContentKind:
	* @FC_NsPrefix:
	* @FC_NsUri:
	* @FC_KeepInContent:false
   * @FC_Criteria:NIL
	
	*/
	NSString *m_Bio;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:255
	* @FixedLength:false
	*/
	NSString *m_PhotoUri;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	*/
	NSString *m_Notes;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Boolean
	*/
	ODataBool *m_ExternalSpeaker;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:SessionSpeaker
	* @FromRole:Speaker
	* @ToRole:Session
	*/
	NSMutableArray *m_Sessions;
	
}

@property ( nonatomic , retain , getter=getSpeakerID , setter=setSpeakerID: )NSNumber *m_SpeakerID;
@property ( nonatomic , retain , getter=getEmail , setter=setEmail: ) NSString *m_Email;
@property ( nonatomic , retain , getter=getFirstName , setter=setFirstName: ) NSString *m_FirstName;
@property ( nonatomic , retain , getter=getLastName , setter=setLastName: ) NSString *m_LastName;
@property ( nonatomic , retain , getter=getBio , setter=setBio: ) NSString *m_Bio;
@property ( nonatomic , retain , getter=getPhotoUri , setter=setPhotoUri: ) NSString *m_PhotoUri;
@property ( nonatomic , retain , getter=getNotes , setter=setNotes: ) NSString *m_Notes;
@property ( nonatomic , retain , getter=getExternalSpeaker , setter=setExternalSpeaker: )ODataBool *m_ExternalSpeaker;
@property ( nonatomic , retain , getter=getSessions , setter=setSessions: )NSMutableArray *m_Sessions;

+ (id) CreateSpeakerWithspeakerid:(NSNumber *)aSpeakerID firstname:(NSString *)aFirstName lastname:(NSString *)aLastName externalspeaker:(ODataBool *)aExternalSpeaker;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Tag
 * @Type:EntityType
 
 * @key:TagID* 
 */
@interface eventsModel_Tag : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_TagID;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:100
	* @FixedLength:false
	*/
	NSString *m_TagValue;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:SessionTag
	* @FromRole:Tag
	* @ToRole:Session
	*/
	NSMutableArray *m_Sessions;
	
}

@property ( nonatomic , retain , getter=getTagID , setter=setTagID: )NSNumber *m_TagID;
@property ( nonatomic , retain , getter=getTagValue , setter=setTagValue: ) NSString *m_TagValue;
@property ( nonatomic , retain , getter=getSessions , setter=setSessions: )NSMutableArray *m_Sessions;

+ (id) CreateTagWithtagid:(NSNumber *)aTagID tagvalue:(NSString *)aTagValue;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:File
 * @Type:EntityType
 
 * @key:FileID* 
 */
@interface eventsModel_File : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_FileID;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:75
	* @FixedLength:false
	*/
	NSString *m_MimeType;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	*/
	NSString *m_FileUri;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_SessionID;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:FK_File_Session
	* @FromRole:File
	* @ToRole:Session
	*/
	NSMutableArray *m_Session;
	
}

@property ( nonatomic , retain , getter=getFileID , setter=setFileID: )NSNumber *m_FileID;
@property ( nonatomic , retain , getter=getMimeType , setter=setMimeType: ) NSString *m_MimeType;
@property ( nonatomic , retain , getter=getFileUri , setter=setFileUri: ) NSString *m_FileUri;
@property ( nonatomic , retain , getter=getSessionID , setter=setSessionID: )NSNumber *m_SessionID;
@property ( nonatomic , retain , getter=getSession , setter=setSession: )NSMutableArray *m_Session;

+ (id) CreateFileWithfileid:(NSNumber *)aFileID mimetype:(NSString *)aMimeType fileuri:(NSString *)aFileUri sessionid:(NSNumber *)aSessionID;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Tweet
 * @Type:EntityType
 
 * @key:TweetID
 * @key:SessionID* 
 */
@interface eventsModel_Tweet : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:20
	* @FixedLength:false
	*/
	NSString *m_TweetID;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:255
	* @FixedLength:false
	*/
	NSString *m_Author;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.String
	* @MaxLength:2048
	* @FixedLength:false
	*/
	NSString *m_Text;
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_SessionID;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:FK_Tweet_Session
	* @FromRole:Tweet
	* @ToRole:Session
	*/
	NSMutableArray *m_Session;
	
}

@property ( nonatomic , retain , getter=getTweetID , setter=setTweetID: ) NSString *m_TweetID;
@property ( nonatomic , retain , getter=getAuthor , setter=setAuthor: ) NSString *m_Author;
@property ( nonatomic , retain , getter=getText , setter=setText: ) NSString *m_Text;
@property ( nonatomic , retain , getter=getSessionID , setter=setSessionID: )NSNumber *m_SessionID;
@property ( nonatomic , retain , getter=getSession , setter=setSession: )NSMutableArray *m_Session;

+ (id) CreateTweetWithtweetid:(NSString *)aTweetID author:(NSString *)aAuthor text:(NSString *)aText sessionid:(NSNumber *)aSessionID;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * Container interface eventsEntities, Namespace: eventsModel
 */
@interface eventsEntities : ObjectContext
{
	 NSString *m_OData_etag;
	 DataServiceQuery *m_Sessions;
	 DataServiceQuery *m_Speakers;
	 DataServiceQuery *m_Tags;
	 DataServiceQuery *m_Files;
	 DataServiceQuery *m_Tweets;
	
}

@property ( nonatomic , retain , getter=getEtag , setter=setEtag: )NSString *m_OData_etag;
@property ( nonatomic , retain , getter=getSessions , setter=setSessions: ) DataServiceQuery *m_Sessions;
@property ( nonatomic , retain , getter=getSpeakers , setter=setSpeakers: ) DataServiceQuery *m_Speakers;
@property ( nonatomic , retain , getter=getTags , setter=setTags: ) DataServiceQuery *m_Tags;
@property ( nonatomic , retain , getter=getFiles , setter=setFiles: ) DataServiceQuery *m_Files;
@property ( nonatomic , retain , getter=getTweets , setter=setTweets: ) DataServiceQuery *m_Tweets;

- (id) init;
- (id) initWithUri:(NSString*)anUri credential:(id)acredential;
- (id) sessions;
- (id) speakers;
- (id) tags;
- (id) files;
- (id) tweets;
- (void) addToSessions:(id)anObject;
- (void) addToSpeakers:(id)anObject;
- (void) addToTags:(id)anObject;
- (void) addToFiles:(id)anObject;
- (void) addToTweets:(id)anObject;

@end
